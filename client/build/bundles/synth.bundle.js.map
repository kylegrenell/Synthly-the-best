{"version":3,"sources":["webpack:///webpack/bootstrap 67f94016d59fcab2b385","webpack:///./src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;AAID;AACA;AACA;;AAEA,iBAAgB,qBAAqB;AACrC;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"synth.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 67f94016d59fcab2b385","var audio = new AudioContext();\n\nconsole.log('app running');\n\n// use a letter (A through G, starting with C), and an octave number (usually between 0 and 9).\nvar semitoneMap = \n{\n  C: -9, D: -7, E: -5, F: -4, G: -2, A: 0, B: 2\n};\n\n// an octave is divided into twelve semitones. An octave is simply the doubling of a frequency. To calculate the frequency of some number of semitones from a reference tone, you can use the following formula:\n// freq = baseFreq ร 2(numSemitones รท 12)\nvar keyboardBaseSound = Math.pow(2, 1/12);\n\nfunction getFrequency(noteName){\n  var note = noteName[0];\n  var octave = noteName[1];\n  var semitone = semitoneMap[note] + (octave - 4) * 12;\n  return 440 * Math.pow(keyboardBaseSound, semitone);\n}\n\n// used to link up the keyboard number \nvar keyCodeNotes = \n{\n  81: 'C5', 87: 'D5', 69: 'E5', 82: 'F5', 84: 'G5', 89: 'A5', 85: 'B5', 73: 'C6', 79: 'D6', 80: 'E6', 219: 'F6',221: 'G6', 65: 'C4',  83: 'D4', 68: 'E4', 70: 'F4', 71: 'G4', 72: 'A4', 74: 'B4', 75: 'C5', 76: 'D5', 186: 'E5', 222: 'F5', 90: 'C3', 88: 'D3', 67: 'E3', 86: 'F3', 66: 'G3', 78: 'A3', 77: 'B3', 188: 'C4', 190: 'D4', 191: 'E4'\n};\n\nvar tones = {};\n\nfor(var keyCode in keyCodeNotes){\n  var osc = audio.createOscillator();\n  var noteName = keyCodeNotes[keyCode];\n  osc.frequency.value = getFrequency(noteName);\n  var gain = audio.createGain();\n  gain.gain.value = 0;\n  osc.connect(gain );\n  osc.start();\n  gain.connect(audio.destination);\n\n  var tone = \n  {\n    noteName: noteName, \n    osc: osc, \n    gain: gain\n  };\n\n  tones[keyCode] = tone;\n}\n\ndocument.addEventListener('keydown', function(e){\n  var tone = tones[e.keyCode];\n  if(tone){\n    tone.gain.gain.value = 2;\n    event.preventDefault();\n    changeKeyElem(tone.noteName, 'add');\n  }\n});\n\ndocument.addEventListener('keyup', function(e){\n  var tone = tones[e.keyCode];\n  if(tone){\n    tone.gain.gain.value = 0;\n    event.preventDefault();\n    changeKeyElem(tone.noteName, 'remove');\n  }\n});\n\n\n\nfunction changeKeyElem(noteName, keyChangeEvent){\n  var keyboardElem = document.querySelector('.keyboard');\n  var keyElems = keyboardElem.querySelectorAll('.keyboard_key');\n\n  for ( var i=0; i < keyElems.length; i++ ) {\n    keyElems[i].classList.remove('is-down');\n  }\n\n  var key = keyboardElem.querySelector( '#' + noteName );\n  key.classList[keyChangeEvent]('is-down');\n}\n\n\n\nvar typeSelect = document.getElementById('type-select');\ntypeSelect.addEventListener('change', function(){\n  changeType(typeSelect.value);\n});\n// this sets initial type\nchangeType(typeSelect.value);\n\nfunction changeType(type){\n  for(var keyCode in tones ){\n    var tone = tones[keyCode];\n    tone.osc.type = type;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}